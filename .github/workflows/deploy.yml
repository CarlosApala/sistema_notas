name: 🚀 Deploy Laravel App

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Clonar código
      uses: actions/checkout@v3

    - name: 🔑 Configurar SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan 177.222.44.38 >> ~/.ssh/known_hosts
    - name: 🧹 Asegurar permisos antes de subir archivos
      run: |
        ssh -i ~/.ssh/id_rsa administrador@177.222.44.38 << EOF
        sudo chown -R administrador:administrador /var/www/laravel
        sudo chmod -R 775 /var/www/laravel
        EOF
    - name: 🚚 Subir archivos al servidor (excluyendo solo lo necesario)
      run: |
        rsync -avz --delete \
          --exclude='.git' \
          --exclude='node_modules' \
          --exclude='vendor' \
          --exclude='.env' \
          ./ administrador@177.222.44.38:/var/www/laravel

    - name: 🛠️ Ejecutar comandos en el servidor
      run: |
        ssh -i ~/.ssh/id_rsa administrador@177.222.44.38 << EOF
          set -e
          cd /var/www/laravel

          # Crear carpetas si no existen
          sudo mkdir -p storage/logs bootstrap/cache

          # Dar permisos correctos recursivamente
          sudo chown -R www-data:www-data storage bootstrap/cache
          sudo chmod -R 775 storage bootstrap/cache

          # Crear archivo laravel.log si no existe, asignar dueño y permisos
          if [ ! -f storage/logs/laravel.log ]; then
          sudo -u www-data touch storage/logs/laravel.log
          sudo chown www-data:www-data storage/logs/laravel.log
          sudo chmod 664 storage/logs/laravel.log
          fi

          # Ahora ya puedes correr composer install sin problemas
          composer install --no-dev --optimize-autoloader

          npm install
          npm run build

          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

          echo "✅ Despliegue completado."
          EOF
